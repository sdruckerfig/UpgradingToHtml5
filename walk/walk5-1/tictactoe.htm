<!DOCTYPE html>
<html  lang="en">
<head>
<meta charset="utf-8" />
<title>Shall we play a game?</title>

<script language="javascript">

function Tictactoe (canvasid) {
	
	this.canvasid = canvasid;
    this.canvas = document.getElementById(canvasid);	
	this.drawCanvas = null;
	
	/* step 4 */
	
	
	this.currentPlayer = "x";
	this.board = new Array(9);
	
	
	this.init = function () {
		
	
		if (this.canvas.getContext) {
			this.drawCanvas = this.canvas.getContext('2d');
		} else {
			alert("Your browser does not support the canvas tag");	
		}

		this.drawGrid();
		this.initBoard(); /* initialize the game grid */
		this.canvas.addEventListener("click",this.processClick,false); /* add event listener for handling clicks */
		
		return this;
	}
	
	this.clear = function() {
		
		this.canvas.width = this.canvas.width;
		this.drawGrid();
		this.initBoard();
		
	}
	
	
	/* draw the grid: step 6 */
	
	
	/* figure out the cell positions */
	
	this.initBoard = function() {
		var i = 0;
	    for (var y=0; y<3; y++) {
		  for (var x=0; x<3; x++) {
			this.board[i] = new Object();
			this.board[i].clientTop = this.canvas.offsetTop + (y * this.canvasHeight / 3) + (y * 5);
			this.board[i].clientLeft = this.canvas.offsetLeft + (x * this.canvasWidth / 3) + (x * 5);
			this.board[i].clientBottom = this.board[i].clientTop + (this.canvasHeight / 3);
			this.board[i].clientRight = this.board[i].clientLeft + (this.canvasWidth / 3);	
			
			this.board[i].top = 0 + (y * this.canvasHeight / 3) + (y * 5);
			this.board[i].left = 0 + (x * this.canvasWidth / 3) + (x * 5);
			this.board[i].bottom = this.board[i].top + (this.canvasHeight / 3);
			this.board[i].right = this.board[i].left + (this.canvasWidth / 3);
			
			this.board[i].value = "";	
			i++;		  
		  }
		}
	}
	
	
	this.setCell = function(pos) {
			
		if (this.currentPlayer == "x") {
			this.board[pos].value = "x";
			
			this.drawCanvas.beginPath();
			this.drawCanvas.moveTo(this.board[pos].left + 5, this.board[pos].top + 5);
			this.drawCanvas.lineTo(this.board[pos].right - 5, this.board[pos].bottom - 5 );
			this.drawCanvas.closePath();
			this.drawCanvas.stroke();
			
			this.drawCanvas.beginPath();
			this.drawCanvas.moveTo(this.board[pos].right - 5, this.board[pos].top + 5);
			this.drawCanvas.lineTo(this.board[pos].left - 5, this.board[pos].bottom - 5 );
			this.drawCanvas.closePath();
			this.drawCanvas.stroke();
			
		} else {
			this.board[pos].value = "o";
			
			var posX = this.board[pos].left + this.canvasWidth / 6;
			var posY = this.board[pos].top + this.canvasHeight / 6;
			var radius = this.canvasHeight / 6 - 10;
			
			this.drawCanvas.beginPath();
			this.drawCanvas.arc(posX,posY,radius,0, Math.PI * 2 , true);
			this.drawCanvas.stroke();
			
		}
			
	}
	
	
	this.togglePlayer = function() {
		if (this.currentPlayer == "x") {
		 this.currentPlayer = "o";	
		} else {
		 this.currentPlayer = "x";	
		}
	} 
	
    this.processClick = function(e) {
		
		var obj = eval(e.target.id);
		
		var cell = -1;
		for (var i=0; i<9; i++ ) {
			if (e.clientX >= obj.board[i].clientLeft && 
				e.clientX <= obj.board[i].clientRight &&
				e.clientY >= obj.board[i].clientTop && 
				e.clientY <= obj.board[i].clientBottom) {
					cell = i;
					if (obj.board[i].value != "") {
							alert("Nice try");
					} else {
						obj.setCell(i);	
						obj.togglePlayer();
					}
				}
				
		}
	}
	
	this.init();
	
}


</script>

</head>

<body onload="tictactoe = new Tictactoe('tictactoe');">

<h1>Multi-player tic-tac-toe</h1>

<!--- step 2 --->

<form>
<input type="button" onclick="tictactoe.clear()" value="Reset" />
<!-- step 18 -->

</form>
</body>
</html>
